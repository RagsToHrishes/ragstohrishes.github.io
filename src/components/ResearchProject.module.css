
/* === 3) Cards: allow vertical growth + no overflow from children === */
.projectCard {
   display: flex;
   flex-wrap: wrap;
   column-gap: var(--spacing-xl);
   row-gap: var(--spacing-lg);
   padding: var(--spacing-xl);
   /* ðŸ”’ Background lives on the element so height changes are visible */
   background: rgba(var(--color-bg-secondary-rgb), 0.8);
   backdrop-filter: blur(2px);
   border: 1px solid var(--color-border);
   border-radius: var(--radius-lg);
   transition: all var(--transition-normal);
   opacity: 0;
   transform: translateY(20px);
   animation: fadeInUp 0.6s ease-out forwards;

   position: relative;         /* keep for hover + focus states */
   z-index: 0;                 /* donâ€™t stack above neighbors */
   pointer-events: auto;

   width: 100%;
   height: auto;          /* grow with content */
   min-height: 300px;
   align-items: flex-start;
   align-content: flex-start;
   box-sizing: border-box;
   overflow: visible;      /* never clip growing children */
}

/* Let card children wrap/shrink instead of spilling horizontally */
.projectCard > * {
  flex: 1 1 260px;   /* adjust base width as you like */
  min-width: 0;      /* CRITICAL to allow text/button shrink in flex */
  max-width: 100%;
  box-sizing: border-box;
  position: relative;
}

.projectCard:hover { border-color: var(--color-accent); }

/* Text/buttons never force overflow */
.projectCard p,
.projectCard .text,
.projectCard .title {
  overflow-wrap: anywhere;
  word-break: normal;
}
.projectLinks {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
  width: 100%;
  justify-content: flex-start;
}
.link {
  white-space: normal;
  max-width: 100%;
}

/* keep your lift + shadow on hover */
.projectCard:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
}

/* make the background border react on hover */
.projectCard:hover::before {
  border-color: var(--color-accent);
}


.projectMedia {
  flex: 0 0 200px;
  height: 200px;
  width: 200px;
  max-width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-radius: var(--radius-md);
  flex-shrink: 0;
}

.mediaContent {
  width: 100%;
  height: 100%;
  border-radius: var(--radius-md);
  transition: transform var(--transition-normal);
}

.mediaContentImage {
  object-fit: contain;
  background: rgba(0, 0, 0, 0.3);
}

.mediaContentVideo {
  object-fit: cover;
}

.mediaContent:hover {
  transform: scale(1.02);
}

.projectContent {
  flex: 1 1 260px;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  min-width: 0;
}

.projectTitle {
  color: #FFB366;
  font-size: 1rem;
  font-weight: 800;
  margin: 0;
  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);
}

.projectDescription {
  color: #FFB366;
  line-height: 1.6;
  font-size: 0.8rem;
  margin: 0;
  font-weight: 600;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
}

.projectAuthors {
  margin: 0;
  margin-top: var(--spacing-xs);
  font-size: 0.7rem;
  color: var(--color-text-muted);
}

.authorHighlight {
  color: #ffffff;
}


.projectVenue {
  margin: 0;
  margin-top: calc(var(--spacing-xs) / 2);
  font-size: 0.7rem;
  color: var(--color-text-muted);
}

.projectTags {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-sm);
}

.tag {
  background: var(--color-bg-tertiary);
  color: var(--color-accent);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-sm);
  font-size: 0.875rem;
  font-weight: 500;
  border: 1px solid var(--color-border);
  transition: all var(--transition-fast);
}

.tag:hover {
  background: var(--color-accent);
  color: var(--color-bg-primary);
  border-color: var(--color-accent);
}

.projectLinks {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
  width: 100%;
  justify-content: flex-start;
}

.link {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-md);
  text-decoration: none;
  font-weight: 500;
  font-size: 0.875rem;
  transition: all var(--transition-fast);
  border: none;
  cursor: pointer;
  font-family: inherit;
  max-width: 100%;
}

.paperLink {
  background: var(--color-accent);
  color: white;
}

.paperLink:hover {
  background: var(--color-accent-hover);
  transform: translateY(-2px);
}

.githubLink {
  background: var(--color-bg-tertiary);
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);
}

.githubLink:hover {
  background: var(--color-border-light);
  border-color: var(--color-accent);
  transform: translateY(-2px);
}

.demoLink {
  background: var(--color-accent-secondary);
  color: var(--color-bg-primary);
}

.demoLink:hover {
  background: #e8820a;
  transform: translateY(-2px);
}

.dataLink {
  background: var(--color-accent-tertiary);
  color: var(--color-bg-primary);
}

.dataLink:hover {
  background: #d4c20e;
  transform: translateY(-2px);
}

.posterLink {
  background: linear-gradient(135deg, var(--color-accent) 0%, var(--color-accent-secondary) 100%);
  color: white;
}

.posterLink:hover {
  background: linear-gradient(135deg, var(--color-accent-hover) 0%, #e8820a 100%);
  transform: translateY(-2px);
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@media (max-width: 900px) {
  .projectCard {
    flex-direction: column;
    align-items: stretch;
    gap: var(--spacing-lg);
    padding: var(--spacing-lg);
  }

  .projectMedia {
    width: 100%;
    max-width: none;
    height: auto;
    min-height: 180px;
    max-height: 320px;
  }

  .mediaContent {
    height: auto;
    max-height: 320px;
  }

  .projectContent {
    width: 100%;
    align-items: stretch;
  }
}

@media (max-width: 600px) {
  .projectCard {
    padding: var(--spacing-md);
    gap: var(--spacing-md);
  }

  .projectLinks {
    flex-direction: column;
  }

  .link {
    justify-content: center;
  }
}
